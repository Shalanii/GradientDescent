data_x = [0,1,2,3,4,5,6,7,8,9,10];data_y = [10,30,50,70,90,110,130,150,170,190,210];batch_size = 3;N = 11;c_i = rand;m_i = (data_y(2)-data_y(1))/(data_x(2)-data_x(1));eata = 0.007;c = [];m = [];rss = [];i=0;stop = 0;count = 1;ideal_c = c_i;ideal_m = m_i;ind = 1;while(stop==0)  count = count+1;    if ind+batch_size>size(data_x,2)    batch_size = size(data_x,2)-ind;  endif  fprintf("ind %d",ind);
  der_c = find_derivative_of_rss_to_c_mini_batch(data_y,data_x,m_i,c_i,ind,batch_size);  der_m = find_derivative_of_rss_to_m_mini_batch(data_y,data_x,m_i,c_i,ind,batch_size);  disp(der_c);  disp(der_m);  fprintf("step_c = %d and step_m = %d",der_c,der_m);  if count>20 || (abs(der_c)<0.1 && count>2) || (abs(der_m)<0.1 && count>2)    stop=1;    fprintf("Terminated");    ideal_c = c_i;    ideal_m = m_i;    fprintf("Optimal m is : %d\nOptimal c is : %d\n",ideal_m,ideal_c);  endif    c_i = c_i - (eata*der_c);  m_i = m_i - (eata*der_m);  c(end+1) = c_i;  m(end+1) = m_i;  new_err = find_err(data_y,m_i,data_x,c_i);  disp("ERR ");  disp(new_err);    i++;   ind = ind+batch_size;  if ind>=N    fprintf("ye");    ind = 1;  endif
endZ = find_rss_for_m_c(data_y,m,data_x,c,N);minIntensityValue = min(Z(:));disp(minIntensityValue);contour(m,c,Z);hold on[~, minIdx] = min(Z(:)); [row,col] = ind2sub(size(Z),minIdx); xMin = m(col); yMin = c(row); disp(xMin);disp(yMin);hold on plot(xMin, yMin, 'rx');plot(m,c,Z,'ro');fprintf("Optimal m is : %d\nOptimal c is : %d\n",xMin,yMin);