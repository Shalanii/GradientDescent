data_x = [0,1,2,3,4,5,6,7];data_y = [10,30,50,70,90,110,130,150];c_i = 0;m_i = 0;eata = 0.012;c = [];m = [];rss = [];N = size(data_x,2);i=0;stop = 0;count = 0;ideal_c = c_i;ideal_m = m_i;#old_err = 0;#new_err = (data_y(1)-(m_i*data_x(1) + c_i))^4;#disp("New err");#disp(new_err);while(stop==0)  count = count+1;  %ind = randi(size(data_x,2));  ind = rem(count,N)+1;  
  der_c = find_derivative_of_rss_to_c_one_coordinate(data_y(ind),data_x(ind),m_i,c_i);  der_m = find_derivative_of_rss_to_m_one_coordinate(data_y(ind),data_x(ind),m_i,c_i);  fprintf("step_c = %d and step_m = %d\n",der_c,der_m);    if count>400    break;  endif
    %if count>3 && (abs(der_c>60) | abs(der_m)>60)   % continue;  %endif
    if count>50 | (((abs(der_c)<0.1 | abs(der_m)<0.1) && count>2))    stop=1;    fprintf("Terminated");    ideal_c = c_i;    ideal_m = m_i;    fprintf("Optimal m is : %d\nOptimal c is : %d\n",ideal_m,ideal_c);  endif    c_i = c_i - (eata.*der_c);  m_i = m_i - (eata.*der_m);  if count==1    old_err = find_err(data_y,m_i,data_x,c_i);  else    new_err = find_err(data_y,m_i,data_x,c_i);    fprintf("old %d new %d\n",old_err,new_err);    if new_err>old_err      %break;      continue;    else      disp("ccc");      c(end+1) = c_i;      m(end+1) = m_i;      old_err = new_err;          endif  endif
      
    i++; end#[M C] = meshgrid(min(m):0.5:max(m)+0.1,min(c):0.5:max(c)+0.1);#[M C] = meshgrid(m,c);m_grid = linspace(min(m(:)), max(m(:)), range(m(:))/5);c_grid = linspace(min(c(:)), max(c(:)), range(c(:))/5);Z = find_rss_for_m_c(data_y,m,data_x,c,N);disp("m");disp(m);disp("c");disp(c);disp("z");disp(Z);minIntensityValue = min(Z(:));disp("MinIntensityValue ");disp(minIntensityValue);contour(m,c,Z);#axis([min(m) max(m)+0.1 min(c) max(c)+0.1 min(Z) max(Z)+1]);hold on[~, minIdx] = min(Z(:)); [row,col] = ind2sub(size(Z),minIdx); xMin = m(col); yMin = c(row); disp(xMin);disp(yMin);hold on plot(xMin, yMin, '+');plot(m,c,Z,'ro');fprintf("Optimal m is : %d\nOptimal c is : %d\n",xMin,yMin);